'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsCATIscarDataLocal
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IscarDataSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MarshalByRefObject)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SqlParameter()))>  _
    Partial Public Class IscarData
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetDataTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLoginBranchDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranslationByLanguageAndPageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProCatalogGetItemDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneItemsDefOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneMyItemsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneMyItemDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneAddNewItemsLisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneDeleteItemsLisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iscar4ProMyZoneAddNewItemDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLanguagesListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemGradeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemMainAppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CatalogIsExistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getContactsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemUnitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamilySubToolTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWordTranslationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLeftMenuApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTopMenuLabelsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountriesEmailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkIfPromotionExistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSearchItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSubApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamiliesListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamiliesBySecondaryApplicationWithCondOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFamilyDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamilyApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParameterSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParameterSearchPicOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamilyIconsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamilyLogosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListISOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListISOAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListISOAllJsonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListHeaderISOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListHeaderISOAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListHeaderISOAllJsonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListFromRelatedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedItemsByItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsListFromRelatedISOAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemDetailsIProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemsDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParametersMobileISOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParametersMobileISOAllParamsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParametersISOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemSparePartsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemKitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGradeDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGradeVcMaterialsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicationMainMethodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGradeVcMaterialsByGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGradeVcDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemNumberByDscoAndGradeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSparePartDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSparePartUsedInToolsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAlternateListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedTypeByFamilyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedTypeByItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedByFamilyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedByItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRelatedByItemNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CHeckRelatedItemExistsBetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CHeckRelatedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMoreInfoDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKitsIncludedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchParamApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchParamParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchParamParameterValuesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchFamiliesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchParamResultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMainToolTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubToolTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamiliesBySecondaryToolTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private P21_NOItemClassOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParameterValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParameterValueSpecialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFamiliesParameterValuesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SemiApp_bl.My.MySettings.Default.SemiApp_bl_wsCATIscarDataLocal_IscarData
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetDataTableCompleted As GetDataTableCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryIDCompleted As GetCountryIDCompletedEventHandler
        
        '''<remarks/>
        Public Event getLoginBranchDataCompleted As getLoginBranchDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranslationByLanguageAndPageCompleted As GetTranslationByLanguageAndPageCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProCatalogGetItemDetailsCompleted As Iscar4ProCatalogGetItemDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneItemsDefCompleted As Iscar4ProMyZoneItemsDefCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneMyItemsListCompleted As Iscar4ProMyZoneMyItemsListCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneMyItemDetailsCompleted As Iscar4ProMyZoneMyItemDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneAddNewItemsLisCompleted As Iscar4ProMyZoneAddNewItemsLisCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneDeleteItemsLisCompleted As Iscar4ProMyZoneDeleteItemsLisCompletedEventHandler
        
        '''<remarks/>
        Public Event Iscar4ProMyZoneAddNewItemDetailsCompleted As Iscar4ProMyZoneAddNewItemDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLanguagesListCompleted As GetLanguagesListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemGradeCompleted As GetItemGradeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemMainAppCompleted As GetItemMainAppCompletedEventHandler
        
        '''<remarks/>
        Public Event CatalogIsExistCompleted As CatalogIsExistCompletedEventHandler
        
        '''<remarks/>
        Public Event getContactsCompleted As getContactsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemUnitsCompleted As GetItemUnitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamilySubToolTypeCompleted As GetFamilySubToolTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWordTranslationCompleted As GetWordTranslationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLeftMenuApplicationsCompleted As GetLeftMenuApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTopMenuLabelsCompleted As GetTopMenuLabelsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountriesEmailsCompleted As GetCountriesEmailsCompletedEventHandler
        
        '''<remarks/>
        Public Event checkIfPromotionExistCompleted As checkIfPromotionExistCompletedEventHandler
        
        '''<remarks/>
        Public Event getSearchItemsCompleted As getSearchItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSubApplicationsCompleted As getSubApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamiliesListCompleted As GetFamiliesListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamiliesBySecondaryApplicationWithCondCompleted As GetFamiliesBySecondaryApplicationWithCondCompletedEventHandler
        
        '''<remarks/>
        Public Event getFamilyDetailsCompleted As getFamilyDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamilyApplicationsCompleted As GetFamilyApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParameterSearchCompleted As GetParameterSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParameterSearchPicCompleted As GetParameterSearchPicCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamilyIconsCompleted As GetFamilyIconsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamilyLogosCompleted As GetFamilyLogosCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListCompleted As GetItemsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListISOCompleted As GetItemsListISOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListISOAllCompleted As GetItemsListISOAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListISOAllJsonCompleted As GetItemsListISOAllJsonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListHeaderCompleted As GetItemsListHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListHeaderISOCompleted As GetItemsListHeaderISOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListHeaderISOAllCompleted As GetItemsListHeaderISOAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListHeaderISOAllJsonCompleted As GetItemsListHeaderISOAllJsonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListFromRelatedCompleted As GetItemsListFromRelatedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedItemsByItemCompleted As GetRelatedItemsByItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsListFromRelatedISOAllCompleted As GetItemsListFromRelatedISOAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemDetailsCompleted As GetItemDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemDetailsIProductCompleted As GetItemDetailsIProductCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemsDetailsCompleted As GetItemsDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParametersCompleted As GetItemParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParametersMobileISOCompleted As GetItemParametersMobileISOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParametersMobileISOAllParamsCompleted As GetItemParametersMobileISOAllParamsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParametersISOCompleted As GetItemParametersISOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemSparePartsCompleted As GetItemSparePartsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemKitsCompleted As GetItemKitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGradeDataCompleted As GetGradeDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGradeVcMaterialsCompleted As GetGradeVcMaterialsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicationMainMethodCompleted As GetApplicationMainMethodCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGradeVcMaterialsByGroupCompleted As GetGradeVcMaterialsByGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGradeVcDataCompleted As GetGradeVcDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemNumberByDscoAndGradeCompleted As GetItemNumberByDscoAndGradeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSparePartDetailsCompleted As GetSparePartDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSparePartUsedInToolsCompleted As GetSparePartUsedInToolsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAlternateListCompleted As GetAlternateListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedTypeByFamilyCompleted As GetRelatedTypeByFamilyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedTypeByItemCompleted As GetRelatedTypeByItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedByFamilyCompleted As GetRelatedByFamilyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedByItemCompleted As GetRelatedByItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRelatedByItemNumberCompleted As GetRelatedByItemNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event CHeckRelatedItemExistsBetCompleted As CHeckRelatedItemExistsBetCompletedEventHandler
        
        '''<remarks/>
        Public Event CHeckRelatedCompleted As CHeckRelatedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMoreInfoDataCompleted As GetMoreInfoDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKitsIncludedCompleted As GetKitsIncludedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchParamApplicationsCompleted As GetSearchParamApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchParamParametersCompleted As GetSearchParamParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchParamParameterValuesCompleted As GetSearchParamParameterValuesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchFamiliesCompleted As GetSearchFamiliesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchParamResultsCompleted As GetSearchParamResultsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMainToolTypeCompleted As GetMainToolTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubToolTypeCompleted As GetSubToolTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamiliesBySecondaryToolTypeCompleted As GetFamiliesBySecondaryToolTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event P21_NOItemClassCompleted As P21_NOItemClassCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParameterValueCompleted As GetItemParameterValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParameterValueSpecialCompleted As GetItemParameterValueSpecialCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFamiliesParameterValuesCompleted As GetFamiliesParameterValuesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataTable(ByVal ProcName As String, ByVal prms As ParamList) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDataTable", New Object() {ProcName, prms})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataTableAsync(ByVal ProcName As String, ByVal prms As ParamList)
            Me.GetDataTableAsync(ProcName, prms, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataTableAsync(ByVal ProcName As String, ByVal prms As ParamList, ByVal userState As Object)
            If (Me.GetDataTableOperationCompleted Is Nothing) Then
                Me.GetDataTableOperationCompleted = AddressOf Me.OnGetDataTableOperationCompleted
            End If
            Me.InvokeAsync("GetDataTable", New Object() {ProcName, prms}, Me.GetDataTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataTableCompleted(Me, New GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryID(ByVal LANG As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCountryID", New Object() {LANG})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryIDAsync(ByVal LANG As String)
            Me.GetCountryIDAsync(LANG, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryIDAsync(ByVal LANG As String, ByVal userState As Object)
            If (Me.GetCountryIDOperationCompleted Is Nothing) Then
                Me.GetCountryIDOperationCompleted = AddressOf Me.OnGetCountryIDOperationCompleted
            End If
            Me.InvokeAsync("GetCountryID", New Object() {LANG}, Me.GetCountryIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryIDCompleted(Me, New GetCountryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLoginBranchData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLoginBranchData(ByVal BranchCode As String, ByVal imcCompanyCode As String, ByVal sID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getLoginBranchData", New Object() {BranchCode, imcCompanyCode, sID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLoginBranchDataAsync(ByVal BranchCode As String, ByVal imcCompanyCode As String, ByVal sID As String)
            Me.getLoginBranchDataAsync(BranchCode, imcCompanyCode, sID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLoginBranchDataAsync(ByVal BranchCode As String, ByVal imcCompanyCode As String, ByVal sID As String, ByVal userState As Object)
            If (Me.getLoginBranchDataOperationCompleted Is Nothing) Then
                Me.getLoginBranchDataOperationCompleted = AddressOf Me.OngetLoginBranchDataOperationCompleted
            End If
            Me.InvokeAsync("getLoginBranchData", New Object() {BranchCode, imcCompanyCode, sID}, Me.getLoginBranchDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLoginBranchDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLoginBranchDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLoginBranchDataCompleted(Me, New getLoginBranchDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTranslationByLanguageAndPage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranslationByLanguageAndPage(ByVal LANG As String, ByVal Page As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTranslationByLanguageAndPage", New Object() {LANG, Page})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranslationByLanguageAndPageAsync(ByVal LANG As String, ByVal Page As Integer)
            Me.GetTranslationByLanguageAndPageAsync(LANG, Page, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranslationByLanguageAndPageAsync(ByVal LANG As String, ByVal Page As Integer, ByVal userState As Object)
            If (Me.GetTranslationByLanguageAndPageOperationCompleted Is Nothing) Then
                Me.GetTranslationByLanguageAndPageOperationCompleted = AddressOf Me.OnGetTranslationByLanguageAndPageOperationCompleted
            End If
            Me.InvokeAsync("GetTranslationByLanguageAndPage", New Object() {LANG, Page}, Me.GetTranslationByLanguageAndPageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranslationByLanguageAndPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranslationByLanguageAndPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranslationByLanguageAndPageCompleted(Me, New GetTranslationByLanguageAndPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProCatalogGetItemDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Iscar4ProCatalogGetItemDetails(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Iscar4ProCatalogGetItemDetails", New Object() {lang, vers, catalogNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProCatalogGetItemDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String)
            Me.Iscar4ProCatalogGetItemDetailsAsync(lang, vers, catalogNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProCatalogGetItemDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String, ByVal userState As Object)
            If (Me.Iscar4ProCatalogGetItemDetailsOperationCompleted Is Nothing) Then
                Me.Iscar4ProCatalogGetItemDetailsOperationCompleted = AddressOf Me.OnIscar4ProCatalogGetItemDetailsOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProCatalogGetItemDetails", New Object() {lang, vers, catalogNumber}, Me.Iscar4ProCatalogGetItemDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProCatalogGetItemDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProCatalogGetItemDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProCatalogGetItemDetailsCompleted(Me, New Iscar4ProCatalogGetItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneItemsDef", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Iscar4ProMyZoneItemsDef(ByVal DefType As String, ByVal DefComp As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Iscar4ProMyZoneItemsDef", New Object() {DefType, DefComp, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneItemsDefAsync(ByVal DefType As String, ByVal DefComp As String, ByVal lang As String)
            Me.Iscar4ProMyZoneItemsDefAsync(DefType, DefComp, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneItemsDefAsync(ByVal DefType As String, ByVal DefComp As String, ByVal lang As String, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneItemsDefOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneItemsDefOperationCompleted = AddressOf Me.OnIscar4ProMyZoneItemsDefOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneItemsDef", New Object() {DefType, DefComp, lang}, Me.Iscar4ProMyZoneItemsDefOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneItemsDefOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneItemsDefCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneItemsDefCompleted(Me, New Iscar4ProMyZoneItemsDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneMyItemsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Iscar4ProMyZoneMyItemsList(ByVal Usermail As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Iscar4ProMyZoneMyItemsList", New Object() {Usermail})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneMyItemsListAsync(ByVal Usermail As String)
            Me.Iscar4ProMyZoneMyItemsListAsync(Usermail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneMyItemsListAsync(ByVal Usermail As String, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneMyItemsListOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneMyItemsListOperationCompleted = AddressOf Me.OnIscar4ProMyZoneMyItemsListOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneMyItemsList", New Object() {Usermail}, Me.Iscar4ProMyZoneMyItemsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneMyItemsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneMyItemsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneMyItemsListCompleted(Me, New Iscar4ProMyZoneMyItemsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneMyItemDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Iscar4ProMyZoneMyItemDetails(ByVal Usermail As String, ByVal ItemId As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Iscar4ProMyZoneMyItemDetails", New Object() {Usermail, ItemId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneMyItemDetailsAsync(ByVal Usermail As String, ByVal ItemId As Integer)
            Me.Iscar4ProMyZoneMyItemDetailsAsync(Usermail, ItemId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneMyItemDetailsAsync(ByVal Usermail As String, ByVal ItemId As Integer, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneMyItemDetailsOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneMyItemDetailsOperationCompleted = AddressOf Me.OnIscar4ProMyZoneMyItemDetailsOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneMyItemDetails", New Object() {Usermail, ItemId}, Me.Iscar4ProMyZoneMyItemDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneMyItemDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneMyItemDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneMyItemDetailsCompleted(Me, New Iscar4ProMyZoneMyItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneAddNewItemsLis", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Iscar4ProMyZoneAddNewItemsLis(ByVal Usermail As String, ByVal ItemListName As String, ByVal catalogNumber As String) As String
            Dim results() As Object = Me.Invoke("Iscar4ProMyZoneAddNewItemsLis", New Object() {Usermail, ItemListName, catalogNumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneAddNewItemsLisAsync(ByVal Usermail As String, ByVal ItemListName As String, ByVal catalogNumber As String)
            Me.Iscar4ProMyZoneAddNewItemsLisAsync(Usermail, ItemListName, catalogNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneAddNewItemsLisAsync(ByVal Usermail As String, ByVal ItemListName As String, ByVal catalogNumber As String, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneAddNewItemsLisOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneAddNewItemsLisOperationCompleted = AddressOf Me.OnIscar4ProMyZoneAddNewItemsLisOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneAddNewItemsLis", New Object() {Usermail, ItemListName, catalogNumber}, Me.Iscar4ProMyZoneAddNewItemsLisOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneAddNewItemsLisOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneAddNewItemsLisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneAddNewItemsLisCompleted(Me, New Iscar4ProMyZoneAddNewItemsLisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneDeleteItemsLis", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Iscar4ProMyZoneDeleteItemsLis(ByVal Usermail As String, ByVal MyItemID As Decimal)
            Me.Invoke("Iscar4ProMyZoneDeleteItemsLis", New Object() {Usermail, MyItemID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneDeleteItemsLisAsync(ByVal Usermail As String, ByVal MyItemID As Decimal)
            Me.Iscar4ProMyZoneDeleteItemsLisAsync(Usermail, MyItemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneDeleteItemsLisAsync(ByVal Usermail As String, ByVal MyItemID As Decimal, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneDeleteItemsLisOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneDeleteItemsLisOperationCompleted = AddressOf Me.OnIscar4ProMyZoneDeleteItemsLisOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneDeleteItemsLis", New Object() {Usermail, MyItemID}, Me.Iscar4ProMyZoneDeleteItemsLisOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneDeleteItemsLisOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneDeleteItemsLisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneDeleteItemsLisCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Iscar4ProMyZoneAddNewItemDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Iscar4ProMyZoneAddNewItemDetails(ByVal MyItemID As Decimal, ByVal MyItemDefID As Integer, ByVal MyItemText As String)
            Me.Invoke("Iscar4ProMyZoneAddNewItemDetails", New Object() {MyItemID, MyItemDefID, MyItemText})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneAddNewItemDetailsAsync(ByVal MyItemID As Decimal, ByVal MyItemDefID As Integer, ByVal MyItemText As String)
            Me.Iscar4ProMyZoneAddNewItemDetailsAsync(MyItemID, MyItemDefID, MyItemText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iscar4ProMyZoneAddNewItemDetailsAsync(ByVal MyItemID As Decimal, ByVal MyItemDefID As Integer, ByVal MyItemText As String, ByVal userState As Object)
            If (Me.Iscar4ProMyZoneAddNewItemDetailsOperationCompleted Is Nothing) Then
                Me.Iscar4ProMyZoneAddNewItemDetailsOperationCompleted = AddressOf Me.OnIscar4ProMyZoneAddNewItemDetailsOperationCompleted
            End If
            Me.InvokeAsync("Iscar4ProMyZoneAddNewItemDetails", New Object() {MyItemID, MyItemDefID, MyItemText}, Me.Iscar4ProMyZoneAddNewItemDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnIscar4ProMyZoneAddNewItemDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iscar4ProMyZoneAddNewItemDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iscar4ProMyZoneAddNewItemDetailsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLanguagesList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLanguagesList(ByVal cat As Integer, ByVal LangList As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLanguagesList", New Object() {cat, LangList})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLanguagesListAsync(ByVal cat As Integer, ByVal LangList As String)
            Me.GetLanguagesListAsync(cat, LangList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLanguagesListAsync(ByVal cat As Integer, ByVal LangList As String, ByVal userState As Object)
            If (Me.GetLanguagesListOperationCompleted Is Nothing) Then
                Me.GetLanguagesListOperationCompleted = AddressOf Me.OnGetLanguagesListOperationCompleted
            End If
            Me.InvokeAsync("GetLanguagesList", New Object() {cat, LangList}, Me.GetLanguagesListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLanguagesListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLanguagesListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLanguagesListCompleted(Me, New GetLanguagesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemGrade", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemGrade(ByVal cat As String) As String
            Dim results() As Object = Me.Invoke("GetItemGrade", New Object() {cat})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemGradeAsync(ByVal cat As String)
            Me.GetItemGradeAsync(cat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemGradeAsync(ByVal cat As String, ByVal userState As Object)
            If (Me.GetItemGradeOperationCompleted Is Nothing) Then
                Me.GetItemGradeOperationCompleted = AddressOf Me.OnGetItemGradeOperationCompleted
            End If
            Me.InvokeAsync("GetItemGrade", New Object() {cat}, Me.GetItemGradeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemGradeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemGradeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemGradeCompleted(Me, New GetItemGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemMainApp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemMainApp(ByVal cat As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemMainApp", New Object() {cat})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemMainAppAsync(ByVal cat As String)
            Me.GetItemMainAppAsync(cat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemMainAppAsync(ByVal cat As String, ByVal userState As Object)
            If (Me.GetItemMainAppOperationCompleted Is Nothing) Then
                Me.GetItemMainAppOperationCompleted = AddressOf Me.OnGetItemMainAppOperationCompleted
            End If
            Me.InvokeAsync("GetItemMainApp", New Object() {cat}, Me.GetItemMainAppOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemMainAppOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemMainAppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemMainAppCompleted(Me, New GetItemMainAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CatalogIsExist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CatalogIsExist(ByVal tableName As String, ByVal parameterName As String, ByVal parameterValue As String) As Boolean
            Dim results() As Object = Me.Invoke("CatalogIsExist", New Object() {tableName, parameterName, parameterValue})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CatalogIsExistAsync(ByVal tableName As String, ByVal parameterName As String, ByVal parameterValue As String)
            Me.CatalogIsExistAsync(tableName, parameterName, parameterValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CatalogIsExistAsync(ByVal tableName As String, ByVal parameterName As String, ByVal parameterValue As String, ByVal userState As Object)
            If (Me.CatalogIsExistOperationCompleted Is Nothing) Then
                Me.CatalogIsExistOperationCompleted = AddressOf Me.OnCatalogIsExistOperationCompleted
            End If
            Me.InvokeAsync("CatalogIsExist", New Object() {tableName, parameterName, parameterValue}, Me.CatalogIsExistOperationCompleted, userState)
        End Sub
        
        Private Sub OnCatalogIsExistOperationCompleted(ByVal arg As Object)
            If (Not (Me.CatalogIsExistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CatalogIsExistCompleted(Me, New CatalogIsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getContacts", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getContacts(ByVal countryCode As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getContacts", New Object() {countryCode})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getContactsAsync(ByVal countryCode As String)
            Me.getContactsAsync(countryCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getContactsAsync(ByVal countryCode As String, ByVal userState As Object)
            If (Me.getContactsOperationCompleted Is Nothing) Then
                Me.getContactsOperationCompleted = AddressOf Me.OngetContactsOperationCompleted
            End If
            Me.InvokeAsync("getContacts", New Object() {countryCode}, Me.getContactsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetContactsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getContactsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getContactsCompleted(Me, New getContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemUnits", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemUnits(ByVal item As String) As String
            Dim results() As Object = Me.Invoke("GetItemUnits", New Object() {item})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemUnitsAsync(ByVal item As String)
            Me.GetItemUnitsAsync(item, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemUnitsAsync(ByVal item As String, ByVal userState As Object)
            If (Me.GetItemUnitsOperationCompleted Is Nothing) Then
                Me.GetItemUnitsOperationCompleted = AddressOf Me.OnGetItemUnitsOperationCompleted
            End If
            Me.InvokeAsync("GetItemUnits", New Object() {item}, Me.GetItemUnitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemUnitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemUnitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemUnitsCompleted(Me, New GetItemUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamilySubToolType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamilySubToolType(ByVal family As String) As String
            Dim results() As Object = Me.Invoke("GetFamilySubToolType", New Object() {family})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamilySubToolTypeAsync(ByVal family As String)
            Me.GetFamilySubToolTypeAsync(family, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamilySubToolTypeAsync(ByVal family As String, ByVal userState As Object)
            If (Me.GetFamilySubToolTypeOperationCompleted Is Nothing) Then
                Me.GetFamilySubToolTypeOperationCompleted = AddressOf Me.OnGetFamilySubToolTypeOperationCompleted
            End If
            Me.InvokeAsync("GetFamilySubToolType", New Object() {family}, Me.GetFamilySubToolTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamilySubToolTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamilySubToolTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamilySubToolTypeCompleted(Me, New GetFamilySubToolTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWordTranslation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWordTranslation(ByVal lang As String, ByVal sName As String, ByVal page As Integer) As String
            Dim results() As Object = Me.Invoke("GetWordTranslation", New Object() {lang, sName, page})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWordTranslationAsync(ByVal lang As String, ByVal sName As String, ByVal page As Integer)
            Me.GetWordTranslationAsync(lang, sName, page, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWordTranslationAsync(ByVal lang As String, ByVal sName As String, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetWordTranslationOperationCompleted Is Nothing) Then
                Me.GetWordTranslationOperationCompleted = AddressOf Me.OnGetWordTranslationOperationCompleted
            End If
            Me.InvokeAsync("GetWordTranslation", New Object() {lang, sName, page}, Me.GetWordTranslationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWordTranslationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWordTranslationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWordTranslationCompleted(Me, New GetWordTranslationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeftMenuApplications", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLeftMenuApplications(ByVal Lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLeftMenuApplications", New Object() {Lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLeftMenuApplicationsAsync(ByVal Lang As String)
            Me.GetLeftMenuApplicationsAsync(Lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLeftMenuApplicationsAsync(ByVal Lang As String, ByVal userState As Object)
            If (Me.GetLeftMenuApplicationsOperationCompleted Is Nothing) Then
                Me.GetLeftMenuApplicationsOperationCompleted = AddressOf Me.OnGetLeftMenuApplicationsOperationCompleted
            End If
            Me.InvokeAsync("GetLeftMenuApplications", New Object() {Lang}, Me.GetLeftMenuApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLeftMenuApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLeftMenuApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLeftMenuApplicationsCompleted(Me, New GetLeftMenuApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopMenuLabels", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTopMenuLabels(ByVal Lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTopMenuLabels", New Object() {Lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTopMenuLabelsAsync(ByVal Lang As String)
            Me.GetTopMenuLabelsAsync(Lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTopMenuLabelsAsync(ByVal Lang As String, ByVal userState As Object)
            If (Me.GetTopMenuLabelsOperationCompleted Is Nothing) Then
                Me.GetTopMenuLabelsOperationCompleted = AddressOf Me.OnGetTopMenuLabelsOperationCompleted
            End If
            Me.InvokeAsync("GetTopMenuLabels", New Object() {Lang}, Me.GetTopMenuLabelsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTopMenuLabelsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTopMenuLabelsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTopMenuLabelsCompleted(Me, New GetTopMenuLabelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountriesEmails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountriesEmails() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCountriesEmails", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountriesEmailsAsync()
            Me.GetCountriesEmailsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountriesEmailsAsync(ByVal userState As Object)
            If (Me.GetCountriesEmailsOperationCompleted Is Nothing) Then
                Me.GetCountriesEmailsOperationCompleted = AddressOf Me.OnGetCountriesEmailsOperationCompleted
            End If
            Me.InvokeAsync("GetCountriesEmails", New Object(-1) {}, Me.GetCountriesEmailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountriesEmailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountriesEmailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountriesEmailsCompleted(Me, New GetCountriesEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkIfPromotionExist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkIfPromotionExist(ByVal Unit As String, ByVal country As String) As Boolean
            Dim results() As Object = Me.Invoke("checkIfPromotionExist", New Object() {Unit, country})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkIfPromotionExistAsync(ByVal Unit As String, ByVal country As String)
            Me.checkIfPromotionExistAsync(Unit, country, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkIfPromotionExistAsync(ByVal Unit As String, ByVal country As String, ByVal userState As Object)
            If (Me.checkIfPromotionExistOperationCompleted Is Nothing) Then
                Me.checkIfPromotionExistOperationCompleted = AddressOf Me.OncheckIfPromotionExistOperationCompleted
            End If
            Me.InvokeAsync("checkIfPromotionExist", New Object() {Unit, country}, Me.checkIfPromotionExistOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckIfPromotionExistOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkIfPromotionExistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkIfPromotionExistCompleted(Me, New checkIfPromotionExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSearchItems", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSearchItems(ByVal Lang As String, ByVal Unit As String, ByVal searchValue As String, ByVal searchType As String, ByVal likeType As Integer, ByVal MainApp As String, ByVal ToolType As String, ByVal country As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getSearchItems", New Object() {Lang, Unit, searchValue, searchType, likeType, MainApp, ToolType, country})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSearchItemsAsync(ByVal Lang As String, ByVal Unit As String, ByVal searchValue As String, ByVal searchType As String, ByVal likeType As Integer, ByVal MainApp As String, ByVal ToolType As String, ByVal country As String)
            Me.getSearchItemsAsync(Lang, Unit, searchValue, searchType, likeType, MainApp, ToolType, country, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSearchItemsAsync(ByVal Lang As String, ByVal Unit As String, ByVal searchValue As String, ByVal searchType As String, ByVal likeType As Integer, ByVal MainApp As String, ByVal ToolType As String, ByVal country As String, ByVal userState As Object)
            If (Me.getSearchItemsOperationCompleted Is Nothing) Then
                Me.getSearchItemsOperationCompleted = AddressOf Me.OngetSearchItemsOperationCompleted
            End If
            Me.InvokeAsync("getSearchItems", New Object() {Lang, Unit, searchValue, searchType, likeType, MainApp, ToolType, country}, Me.getSearchItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSearchItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSearchItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSearchItemsCompleted(Me, New getSearchItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSubApplications", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSubApplications(ByVal Lang As String, ByVal mapp As String, ByVal App As Integer, ByVal unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getSubApplications", New Object() {Lang, mapp, App, unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSubApplicationsAsync(ByVal Lang As String, ByVal mapp As String, ByVal App As Integer, ByVal unit As String)
            Me.getSubApplicationsAsync(Lang, mapp, App, unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSubApplicationsAsync(ByVal Lang As String, ByVal mapp As String, ByVal App As Integer, ByVal unit As String, ByVal userState As Object)
            If (Me.getSubApplicationsOperationCompleted Is Nothing) Then
                Me.getSubApplicationsOperationCompleted = AddressOf Me.OngetSubApplicationsOperationCompleted
            End If
            Me.InvokeAsync("getSubApplications", New Object() {Lang, mapp, App, unit}, Me.getSubApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSubApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSubApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSubApplicationsCompleted(Me, New getSubApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamiliesList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamiliesList(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamiliesList", New Object() {lang, MainApp, SubApp, vers, typeOfDisplay})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesListAsync(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String)
            Me.GetFamiliesListAsync(lang, MainApp, SubApp, vers, typeOfDisplay, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesListAsync(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String, ByVal userState As Object)
            If (Me.GetFamiliesListOperationCompleted Is Nothing) Then
                Me.GetFamiliesListOperationCompleted = AddressOf Me.OnGetFamiliesListOperationCompleted
            End If
            Me.InvokeAsync("GetFamiliesList", New Object() {lang, MainApp, SubApp, vers, typeOfDisplay}, Me.GetFamiliesListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamiliesListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamiliesListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamiliesListCompleted(Me, New GetFamiliesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamiliesBySecondaryApplicationWithCond", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamiliesBySecondaryApplicationWithCond(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String, ByVal sWHERE As String, ByVal condCounter As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamiliesBySecondaryApplicationWithCond", New Object() {lang, MainApp, SubApp, vers, typeOfDisplay, sWHERE, condCounter})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesBySecondaryApplicationWithCondAsync(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String, ByVal sWHERE As String, ByVal condCounter As String)
            Me.GetFamiliesBySecondaryApplicationWithCondAsync(lang, MainApp, SubApp, vers, typeOfDisplay, sWHERE, condCounter, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesBySecondaryApplicationWithCondAsync(ByVal lang As String, ByVal MainApp As String, ByVal SubApp As Integer, ByVal vers As String, ByVal typeOfDisplay As String, ByVal sWHERE As String, ByVal condCounter As String, ByVal userState As Object)
            If (Me.GetFamiliesBySecondaryApplicationWithCondOperationCompleted Is Nothing) Then
                Me.GetFamiliesBySecondaryApplicationWithCondOperationCompleted = AddressOf Me.OnGetFamiliesBySecondaryApplicationWithCondOperationCompleted
            End If
            Me.InvokeAsync("GetFamiliesBySecondaryApplicationWithCond", New Object() {lang, MainApp, SubApp, vers, typeOfDisplay, sWHERE, condCounter}, Me.GetFamiliesBySecondaryApplicationWithCondOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamiliesBySecondaryApplicationWithCondOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamiliesBySecondaryApplicationWithCondCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamiliesBySecondaryApplicationWithCondCompleted(Me, New GetFamiliesBySecondaryApplicationWithCondCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFamilyDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFamilyDetails(ByVal familyNumber As Integer, ByVal version As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getFamilyDetails", New Object() {familyNumber, version, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFamilyDetailsAsync(ByVal familyNumber As Integer, ByVal version As String, ByVal lang As String)
            Me.getFamilyDetailsAsync(familyNumber, version, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFamilyDetailsAsync(ByVal familyNumber As Integer, ByVal version As String, ByVal lang As String, ByVal userState As Object)
            If (Me.getFamilyDetailsOperationCompleted Is Nothing) Then
                Me.getFamilyDetailsOperationCompleted = AddressOf Me.OngetFamilyDetailsOperationCompleted
            End If
            Me.InvokeAsync("getFamilyDetails", New Object() {familyNumber, version, lang}, Me.getFamilyDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFamilyDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFamilyDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFamilyDetailsCompleted(Me, New getFamilyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamilyApplications", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamilyApplications(ByVal familyNumber As Integer, ByVal mainApp As String, ByVal version As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamilyApplications", New Object() {familyNumber, mainApp, version, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamilyApplicationsAsync(ByVal familyNumber As Integer, ByVal mainApp As String, ByVal version As String, ByVal lang As String)
            Me.GetFamilyApplicationsAsync(familyNumber, mainApp, version, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamilyApplicationsAsync(ByVal familyNumber As Integer, ByVal mainApp As String, ByVal version As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetFamilyApplicationsOperationCompleted Is Nothing) Then
                Me.GetFamilyApplicationsOperationCompleted = AddressOf Me.OnGetFamilyApplicationsOperationCompleted
            End If
            Me.InvokeAsync("GetFamilyApplications", New Object() {familyNumber, mainApp, version, lang}, Me.GetFamilyApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamilyApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamilyApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamilyApplicationsCompleted(Me, New GetFamilyApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParameterSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParameterSearch(ByVal app As Integer, ByVal lang As String, ByVal version As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetParameterSearch", New Object() {app, lang, version})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParameterSearchAsync(ByVal app As Integer, ByVal lang As String, ByVal version As String)
            Me.GetParameterSearchAsync(app, lang, version, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParameterSearchAsync(ByVal app As Integer, ByVal lang As String, ByVal version As String, ByVal userState As Object)
            If (Me.GetParameterSearchOperationCompleted Is Nothing) Then
                Me.GetParameterSearchOperationCompleted = AddressOf Me.OnGetParameterSearchOperationCompleted
            End If
            Me.InvokeAsync("GetParameterSearch", New Object() {app, lang, version}, Me.GetParameterSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParameterSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParameterSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParameterSearchCompleted(Me, New GetParameterSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParameterSearchPic", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParameterSearchPic(ByVal paramNums As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetParameterSearchPic", New Object() {paramNums})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParameterSearchPicAsync(ByVal paramNums As String)
            Me.GetParameterSearchPicAsync(paramNums, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParameterSearchPicAsync(ByVal paramNums As String, ByVal userState As Object)
            If (Me.GetParameterSearchPicOperationCompleted Is Nothing) Then
                Me.GetParameterSearchPicOperationCompleted = AddressOf Me.OnGetParameterSearchPicOperationCompleted
            End If
            Me.InvokeAsync("GetParameterSearchPic", New Object() {paramNums}, Me.GetParameterSearchPicOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParameterSearchPicOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParameterSearchPicCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParameterSearchPicCompleted(Me, New GetParameterSearchPicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamilyIcons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamilyIcons(ByVal familyNumber As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamilyIcons", New Object() {familyNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamilyIconsAsync(ByVal familyNumber As Integer)
            Me.GetFamilyIconsAsync(familyNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamilyIconsAsync(ByVal familyNumber As Integer, ByVal userState As Object)
            If (Me.GetFamilyIconsOperationCompleted Is Nothing) Then
                Me.GetFamilyIconsOperationCompleted = AddressOf Me.OnGetFamilyIconsOperationCompleted
            End If
            Me.InvokeAsync("GetFamilyIcons", New Object() {familyNumber}, Me.GetFamilyIconsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamilyIconsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamilyIconsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamilyIconsCompleted(Me, New GetFamilyIconsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamilyLogos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamilyLogos(ByVal familyNumber As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamilyLogos", New Object() {familyNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamilyLogosAsync(ByVal familyNumber As Integer)
            Me.GetFamilyLogosAsync(familyNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamilyLogosAsync(ByVal familyNumber As Integer, ByVal userState As Object)
            If (Me.GetFamilyLogosOperationCompleted Is Nothing) Then
                Me.GetFamilyLogosOperationCompleted = AddressOf Me.OnGetFamilyLogosOperationCompleted
            End If
            Me.InvokeAsync("GetFamilyLogos", New Object() {familyNumber}, Me.GetFamilyLogosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamilyLogosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamilyLogosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamilyLogosCompleted(Me, New GetFamilyLogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsList(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsList", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListOperationCompleted Is Nothing) Then
                Me.GetItemsListOperationCompleted = AddressOf Me.OnGetItemsListOperationCompleted
            End If
            Me.InvokeAsync("GetItemsList", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListCompleted(Me, New GetItemsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListISO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListISO(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListISO", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListISOAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListISOOperationCompleted Is Nothing) Then
                Me.GetItemsListISOOperationCompleted = AddressOf Me.OnGetItemsListISOOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListISO", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListISOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListISOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListISOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListISOCompleted(Me, New GetItemsListISOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListISOAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListISOAll(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListISOAll", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListISOAllAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListISOAllOperationCompleted Is Nothing) Then
                Me.GetItemsListISOAllOperationCompleted = AddressOf Me.OnGetItemsListISOAllOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListISOAll", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListISOAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListISOAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListISOAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListISOAllCompleted(Me, New GetItemsListISOAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListISOAllJson", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListISOAllJson(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As String
            Dim results() As Object = Me.Invoke("GetItemsListISOAllJson", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAllJsonAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListISOAllJsonAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListISOAllJsonAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListISOAllJsonOperationCompleted Is Nothing) Then
                Me.GetItemsListISOAllJsonOperationCompleted = AddressOf Me.OnGetItemsListISOAllJsonOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListISOAllJson", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListISOAllJsonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListISOAllJsonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListISOAllJsonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListISOAllJsonCompleted(Me, New GetItemsListISOAllJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListHeader(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListHeader", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListHeaderAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListHeaderOperationCompleted Is Nothing) Then
                Me.GetItemsListHeaderOperationCompleted = AddressOf Me.OnGetItemsListHeaderOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListHeader", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListHeaderCompleted(Me, New GetItemsListHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListHeaderISO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListHeaderISO(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListHeaderISO", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListHeaderISOAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListHeaderISOOperationCompleted Is Nothing) Then
                Me.GetItemsListHeaderISOOperationCompleted = AddressOf Me.OnGetItemsListHeaderISOOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListHeaderISO", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListHeaderISOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListHeaderISOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListHeaderISOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListHeaderISOCompleted(Me, New GetItemsListHeaderISOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListHeaderISOAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListHeaderISOAll(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListHeaderISOAll", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListHeaderISOAllAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListHeaderISOAllOperationCompleted Is Nothing) Then
                Me.GetItemsListHeaderISOAllOperationCompleted = AddressOf Me.OnGetItemsListHeaderISOAllOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListHeaderISOAll", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListHeaderISOAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListHeaderISOAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListHeaderISOAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListHeaderISOAllCompleted(Me, New GetItemsListHeaderISOAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListHeaderISOAllJson", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListHeaderISOAllJson(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String) As String
            Dim results() As Object = Me.Invoke("GetItemsListHeaderISOAllJson", New Object() {lang, vers, familyNumber, sTool})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAllJsonAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String)
            Me.GetItemsListHeaderISOAllJsonAsync(lang, vers, familyNumber, sTool, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListHeaderISOAllJsonAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal userState As Object)
            If (Me.GetItemsListHeaderISOAllJsonOperationCompleted Is Nothing) Then
                Me.GetItemsListHeaderISOAllJsonOperationCompleted = AddressOf Me.OnGetItemsListHeaderISOAllJsonOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListHeaderISOAllJson", New Object() {lang, vers, familyNumber, sTool}, Me.GetItemsListHeaderISOAllJsonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListHeaderISOAllJsonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListHeaderISOAllJsonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListHeaderISOAllJsonCompleted(Me, New GetItemsListHeaderISOAllJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListFromRelated", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListFromRelated(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListFromRelated", New Object() {lang, vers, familyNumber, sTool, sCat, itemName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListFromRelatedAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String)
            Me.GetItemsListFromRelatedAsync(lang, vers, familyNumber, sTool, sCat, itemName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListFromRelatedAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String, ByVal userState As Object)
            If (Me.GetItemsListFromRelatedOperationCompleted Is Nothing) Then
                Me.GetItemsListFromRelatedOperationCompleted = AddressOf Me.OnGetItemsListFromRelatedOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListFromRelated", New Object() {lang, vers, familyNumber, sTool, sCat, itemName}, Me.GetItemsListFromRelatedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListFromRelatedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListFromRelatedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListFromRelatedCompleted(Me, New GetItemsListFromRelatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedItemsByItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedItemsByItem(ByVal itemNumber As String, ByVal units As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedItemsByItem", New Object() {itemNumber, units, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedItemsByItemAsync(ByVal itemNumber As String, ByVal units As String, ByVal lang As String)
            Me.GetRelatedItemsByItemAsync(itemNumber, units, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedItemsByItemAsync(ByVal itemNumber As String, ByVal units As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetRelatedItemsByItemOperationCompleted Is Nothing) Then
                Me.GetRelatedItemsByItemOperationCompleted = AddressOf Me.OnGetRelatedItemsByItemOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedItemsByItem", New Object() {itemNumber, units, lang}, Me.GetRelatedItemsByItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedItemsByItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedItemsByItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedItemsByItemCompleted(Me, New GetRelatedItemsByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsListFromRelatedISOAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsListFromRelatedISOAll(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsListFromRelatedISOAll", New Object() {lang, vers, familyNumber, sTool, sCat, itemName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsListFromRelatedISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String)
            Me.GetItemsListFromRelatedISOAllAsync(lang, vers, familyNumber, sTool, sCat, itemName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsListFromRelatedISOAllAsync(ByVal lang As String, ByVal vers As String, ByVal familyNumber As String, ByVal sTool As String, ByVal sCat As String, ByVal itemName As String, ByVal userState As Object)
            If (Me.GetItemsListFromRelatedISOAllOperationCompleted Is Nothing) Then
                Me.GetItemsListFromRelatedISOAllOperationCompleted = AddressOf Me.OnGetItemsListFromRelatedISOAllOperationCompleted
            End If
            Me.InvokeAsync("GetItemsListFromRelatedISOAll", New Object() {lang, vers, familyNumber, sTool, sCat, itemName}, Me.GetItemsListFromRelatedISOAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsListFromRelatedISOAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsListFromRelatedISOAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsListFromRelatedISOAllCompleted(Me, New GetItemsListFromRelatedISOAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemDetails(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemDetails", New Object() {lang, vers, catalogNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String)
            Me.GetItemDetailsAsync(lang, vers, catalogNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String, ByVal userState As Object)
            If (Me.GetItemDetailsOperationCompleted Is Nothing) Then
                Me.GetItemDetailsOperationCompleted = AddressOf Me.OnGetItemDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetItemDetails", New Object() {lang, vers, catalogNumber}, Me.GetItemDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemDetailsCompleted(Me, New GetItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemDetailsIProduct", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemDetailsIProduct(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemDetailsIProduct", New Object() {lang, vers, catalogNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemDetailsIProductAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String)
            Me.GetItemDetailsIProductAsync(lang, vers, catalogNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemDetailsIProductAsync(ByVal lang As String, ByVal vers As String, ByVal catalogNumber As String, ByVal userState As Object)
            If (Me.GetItemDetailsIProductOperationCompleted Is Nothing) Then
                Me.GetItemDetailsIProductOperationCompleted = AddressOf Me.OnGetItemDetailsIProductOperationCompleted
            End If
            Me.InvokeAsync("GetItemDetailsIProduct", New Object() {lang, vers, catalogNumber}, Me.GetItemDetailsIProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemDetailsIProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemDetailsIProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemDetailsIProductCompleted(Me, New GetItemDetailsIProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemsDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemsDetails(ByVal lang As String, ByVal vers As String, ByVal catalognumber As String, ByVal country As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemsDetails", New Object() {lang, vers, catalognumber, country})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemsDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalognumber As String, ByVal country As String)
            Me.GetItemsDetailsAsync(lang, vers, catalognumber, country, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemsDetailsAsync(ByVal lang As String, ByVal vers As String, ByVal catalognumber As String, ByVal country As String, ByVal userState As Object)
            If (Me.GetItemsDetailsOperationCompleted Is Nothing) Then
                Me.GetItemsDetailsOperationCompleted = AddressOf Me.OnGetItemsDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetItemsDetails", New Object() {lang, vers, catalognumber, country}, Me.GetItemsDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemsDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemsDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemsDetailsCompleted(Me, New GetItemsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParameters", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParameters(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemParameters", New Object() {itemNumber, vers, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String)
            Me.GetItemParametersAsync(itemNumber, vers, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetItemParametersOperationCompleted Is Nothing) Then
                Me.GetItemParametersOperationCompleted = AddressOf Me.OnGetItemParametersOperationCompleted
            End If
            Me.InvokeAsync("GetItemParameters", New Object() {itemNumber, vers, lang}, Me.GetItemParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParametersCompleted(Me, New GetItemParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParametersMobileISO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParametersMobileISO(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemParametersMobileISO", New Object() {itemNumber, vers, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersMobileISOAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String)
            Me.GetItemParametersMobileISOAsync(itemNumber, vers, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersMobileISOAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetItemParametersMobileISOOperationCompleted Is Nothing) Then
                Me.GetItemParametersMobileISOOperationCompleted = AddressOf Me.OnGetItemParametersMobileISOOperationCompleted
            End If
            Me.InvokeAsync("GetItemParametersMobileISO", New Object() {itemNumber, vers, lang}, Me.GetItemParametersMobileISOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParametersMobileISOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParametersMobileISOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParametersMobileISOCompleted(Me, New GetItemParametersMobileISOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParametersMobileISOAllParams", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParametersMobileISOAllParams(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemParametersMobileISOAllParams", New Object() {itemNumber, vers, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersMobileISOAllParamsAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String)
            Me.GetItemParametersMobileISOAllParamsAsync(itemNumber, vers, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersMobileISOAllParamsAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetItemParametersMobileISOAllParamsOperationCompleted Is Nothing) Then
                Me.GetItemParametersMobileISOAllParamsOperationCompleted = AddressOf Me.OnGetItemParametersMobileISOAllParamsOperationCompleted
            End If
            Me.InvokeAsync("GetItemParametersMobileISOAllParams", New Object() {itemNumber, vers, lang}, Me.GetItemParametersMobileISOAllParamsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParametersMobileISOAllParamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParametersMobileISOAllParamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParametersMobileISOAllParamsCompleted(Me, New GetItemParametersMobileISOAllParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParametersISO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParametersISO(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemParametersISO", New Object() {itemNumber, vers, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersISOAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String)
            Me.GetItemParametersISOAsync(itemNumber, vers, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersISOAsync(ByVal itemNumber As String, ByVal vers As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetItemParametersISOOperationCompleted Is Nothing) Then
                Me.GetItemParametersISOOperationCompleted = AddressOf Me.OnGetItemParametersISOOperationCompleted
            End If
            Me.InvokeAsync("GetItemParametersISO", New Object() {itemNumber, vers, lang}, Me.GetItemParametersISOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParametersISOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParametersISOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParametersISOCompleted(Me, New GetItemParametersISOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemSpareParts", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemSpareParts(ByVal iCat As String, ByVal units As String, ByVal country As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemSpareParts", New Object() {iCat, units, country, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemSparePartsAsync(ByVal iCat As String, ByVal units As String, ByVal country As String, ByVal lang As String)
            Me.GetItemSparePartsAsync(iCat, units, country, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemSparePartsAsync(ByVal iCat As String, ByVal units As String, ByVal country As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetItemSparePartsOperationCompleted Is Nothing) Then
                Me.GetItemSparePartsOperationCompleted = AddressOf Me.OnGetItemSparePartsOperationCompleted
            End If
            Me.InvokeAsync("GetItemSpareParts", New Object() {iCat, units, country, lang}, Me.GetItemSparePartsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemSparePartsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemSparePartsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemSparePartsCompleted(Me, New GetItemSparePartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemKits", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemKits(ByVal familyNumber As String, ByVal itemNumber As String, ByVal Unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemKits", New Object() {familyNumber, itemNumber, Unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemKitsAsync(ByVal familyNumber As String, ByVal itemNumber As String, ByVal Unit As String)
            Me.GetItemKitsAsync(familyNumber, itemNumber, Unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemKitsAsync(ByVal familyNumber As String, ByVal itemNumber As String, ByVal Unit As String, ByVal userState As Object)
            If (Me.GetItemKitsOperationCompleted Is Nothing) Then
                Me.GetItemKitsOperationCompleted = AddressOf Me.OnGetItemKitsOperationCompleted
            End If
            Me.InvokeAsync("GetItemKits", New Object() {familyNumber, itemNumber, Unit}, Me.GetItemKitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemKitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemKitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemKitsCompleted(Me, New GetItemKitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGradeData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGradeData(ByVal grade As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetGradeData", New Object() {grade, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGradeDataAsync(ByVal grade As String, ByVal lang As String)
            Me.GetGradeDataAsync(grade, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGradeDataAsync(ByVal grade As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetGradeDataOperationCompleted Is Nothing) Then
                Me.GetGradeDataOperationCompleted = AddressOf Me.OnGetGradeDataOperationCompleted
            End If
            Me.InvokeAsync("GetGradeData", New Object() {grade, lang}, Me.GetGradeDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGradeDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGradeDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGradeDataCompleted(Me, New GetGradeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGradeVcMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGradeVcMaterials(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal language As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetGradeVcMaterials", New Object() {grade, item, unit, language})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcMaterialsAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal language As String)
            Me.GetGradeVcMaterialsAsync(grade, item, unit, language, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcMaterialsAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal language As String, ByVal userState As Object)
            If (Me.GetGradeVcMaterialsOperationCompleted Is Nothing) Then
                Me.GetGradeVcMaterialsOperationCompleted = AddressOf Me.OnGetGradeVcMaterialsOperationCompleted
            End If
            Me.InvokeAsync("GetGradeVcMaterials", New Object() {grade, item, unit, language}, Me.GetGradeVcMaterialsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGradeVcMaterialsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGradeVcMaterialsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGradeVcMaterialsCompleted(Me, New GetGradeVcMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationMainMethod", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicationMainMethod(ByVal unit As String, ByVal app As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetApplicationMainMethod", New Object() {unit, app})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicationMainMethodAsync(ByVal unit As String, ByVal app As Integer)
            Me.GetApplicationMainMethodAsync(unit, app, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicationMainMethodAsync(ByVal unit As String, ByVal app As Integer, ByVal userState As Object)
            If (Me.GetApplicationMainMethodOperationCompleted Is Nothing) Then
                Me.GetApplicationMainMethodOperationCompleted = AddressOf Me.OnGetApplicationMainMethodOperationCompleted
            End If
            Me.InvokeAsync("GetApplicationMainMethod", New Object() {unit, app}, Me.GetApplicationMainMethodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicationMainMethodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicationMainMethodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicationMainMethodCompleted(Me, New GetApplicationMainMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGradeVcMaterialsByGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGradeVcMaterialsByGroup(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal group As String, ByVal language As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetGradeVcMaterialsByGroup", New Object() {grade, item, unit, group, language})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcMaterialsByGroupAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal group As String, ByVal language As String)
            Me.GetGradeVcMaterialsByGroupAsync(grade, item, unit, group, language, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcMaterialsByGroupAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal group As String, ByVal language As String, ByVal userState As Object)
            If (Me.GetGradeVcMaterialsByGroupOperationCompleted Is Nothing) Then
                Me.GetGradeVcMaterialsByGroupOperationCompleted = AddressOf Me.OnGetGradeVcMaterialsByGroupOperationCompleted
            End If
            Me.InvokeAsync("GetGradeVcMaterialsByGroup", New Object() {grade, item, unit, group, language}, Me.GetGradeVcMaterialsByGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGradeVcMaterialsByGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGradeVcMaterialsByGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGradeVcMaterialsByGroupCompleted(Me, New GetGradeVcMaterialsByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGradeVcData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGradeVcData(ByVal grade As String, ByVal item As String, ByVal unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetGradeVcData", New Object() {grade, item, unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcDataAsync(ByVal grade As String, ByVal item As String, ByVal unit As String)
            Me.GetGradeVcDataAsync(grade, item, unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGradeVcDataAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal userState As Object)
            If (Me.GetGradeVcDataOperationCompleted Is Nothing) Then
                Me.GetGradeVcDataOperationCompleted = AddressOf Me.OnGetGradeVcDataOperationCompleted
            End If
            Me.InvokeAsync("GetGradeVcData", New Object() {grade, item, unit}, Me.GetGradeVcDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGradeVcDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGradeVcDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGradeVcDataCompleted(Me, New GetGradeVcDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemNumberByDscoAndGrade", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemNumberByDscoAndGrade(ByVal grade As String, ByVal item As String, ByVal unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetItemNumberByDscoAndGrade", New Object() {grade, item, unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemNumberByDscoAndGradeAsync(ByVal grade As String, ByVal item As String, ByVal unit As String)
            Me.GetItemNumberByDscoAndGradeAsync(grade, item, unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemNumberByDscoAndGradeAsync(ByVal grade As String, ByVal item As String, ByVal unit As String, ByVal userState As Object)
            If (Me.GetItemNumberByDscoAndGradeOperationCompleted Is Nothing) Then
                Me.GetItemNumberByDscoAndGradeOperationCompleted = AddressOf Me.OnGetItemNumberByDscoAndGradeOperationCompleted
            End If
            Me.InvokeAsync("GetItemNumberByDscoAndGrade", New Object() {grade, item, unit}, Me.GetItemNumberByDscoAndGradeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemNumberByDscoAndGradeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemNumberByDscoAndGradeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemNumberByDscoAndGradeCompleted(Me, New GetItemNumberByDscoAndGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSparePartDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSparePartDetails(ByVal sp As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSparePartDetails", New Object() {sp})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSparePartDetailsAsync(ByVal sp As String)
            Me.GetSparePartDetailsAsync(sp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSparePartDetailsAsync(ByVal sp As String, ByVal userState As Object)
            If (Me.GetSparePartDetailsOperationCompleted Is Nothing) Then
                Me.GetSparePartDetailsOperationCompleted = AddressOf Me.OnGetSparePartDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetSparePartDetails", New Object() {sp}, Me.GetSparePartDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSparePartDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSparePartDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSparePartDetailsCompleted(Me, New GetSparePartDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSparePartUsedInTools", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSparePartUsedInTools(ByVal sp As String, ByVal vers As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSparePartUsedInTools", New Object() {sp, vers})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSparePartUsedInToolsAsync(ByVal sp As String, ByVal vers As String)
            Me.GetSparePartUsedInToolsAsync(sp, vers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSparePartUsedInToolsAsync(ByVal sp As String, ByVal vers As String, ByVal userState As Object)
            If (Me.GetSparePartUsedInToolsOperationCompleted Is Nothing) Then
                Me.GetSparePartUsedInToolsOperationCompleted = AddressOf Me.OnGetSparePartUsedInToolsOperationCompleted
            End If
            Me.InvokeAsync("GetSparePartUsedInTools", New Object() {sp, vers}, Me.GetSparePartUsedInToolsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSparePartUsedInToolsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSparePartUsedInToolsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSparePartUsedInToolsCompleted(Me, New GetSparePartUsedInToolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlternateList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAlternateList(ByVal gicat As String, ByVal vers As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAlternateList", New Object() {gicat, vers})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAlternateListAsync(ByVal gicat As String, ByVal vers As String)
            Me.GetAlternateListAsync(gicat, vers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAlternateListAsync(ByVal gicat As String, ByVal vers As String, ByVal userState As Object)
            If (Me.GetAlternateListOperationCompleted Is Nothing) Then
                Me.GetAlternateListOperationCompleted = AddressOf Me.OnGetAlternateListOperationCompleted
            End If
            Me.InvokeAsync("GetAlternateList", New Object() {gicat, vers}, Me.GetAlternateListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAlternateListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAlternateListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAlternateListCompleted(Me, New GetAlternateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedTypeByFamily", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedTypeByFamily(ByVal fnum As Integer, ByVal vers As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedTypeByFamily", New Object() {fnum, vers})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedTypeByFamilyAsync(ByVal fnum As Integer, ByVal vers As String)
            Me.GetRelatedTypeByFamilyAsync(fnum, vers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedTypeByFamilyAsync(ByVal fnum As Integer, ByVal vers As String, ByVal userState As Object)
            If (Me.GetRelatedTypeByFamilyOperationCompleted Is Nothing) Then
                Me.GetRelatedTypeByFamilyOperationCompleted = AddressOf Me.OnGetRelatedTypeByFamilyOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedTypeByFamily", New Object() {fnum, vers}, Me.GetRelatedTypeByFamilyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedTypeByFamilyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedTypeByFamilyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedTypeByFamilyCompleted(Me, New GetRelatedTypeByFamilyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedTypeByItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedTypeByItem(ByVal gidesc As String, ByVal vers As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedTypeByItem", New Object() {gidesc, vers})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedTypeByItemAsync(ByVal gidesc As String, ByVal vers As String)
            Me.GetRelatedTypeByItemAsync(gidesc, vers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedTypeByItemAsync(ByVal gidesc As String, ByVal vers As String, ByVal userState As Object)
            If (Me.GetRelatedTypeByItemOperationCompleted Is Nothing) Then
                Me.GetRelatedTypeByItemOperationCompleted = AddressOf Me.OnGetRelatedTypeByItemOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedTypeByItem", New Object() {gidesc, vers}, Me.GetRelatedTypeByItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedTypeByItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedTypeByItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedTypeByItemCompleted(Me, New GetRelatedTypeByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedByFamily", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedByFamily(ByVal fnum As Integer, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedByFamily", New Object() {fnum, vers, apnum, ltype, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByFamilyAsync(ByVal fnum As Integer, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String)
            Me.GetRelatedByFamilyAsync(fnum, vers, apnum, ltype, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByFamilyAsync(ByVal fnum As Integer, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetRelatedByFamilyOperationCompleted Is Nothing) Then
                Me.GetRelatedByFamilyOperationCompleted = AddressOf Me.OnGetRelatedByFamilyOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedByFamily", New Object() {fnum, vers, apnum, ltype, lang}, Me.GetRelatedByFamilyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedByFamilyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedByFamilyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedByFamilyCompleted(Me, New GetRelatedByFamilyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedByItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedByItem(ByVal gidesc As String, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedByItem", New Object() {gidesc, vers, apnum, ltype, lang})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByItemAsync(ByVal gidesc As String, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String)
            Me.GetRelatedByItemAsync(gidesc, vers, apnum, ltype, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByItemAsync(ByVal gidesc As String, ByVal vers As String, ByVal apnum As Integer, ByVal ltype As String, ByVal lang As String, ByVal userState As Object)
            If (Me.GetRelatedByItemOperationCompleted Is Nothing) Then
                Me.GetRelatedByItemOperationCompleted = AddressOf Me.OnGetRelatedByItemOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedByItem", New Object() {gidesc, vers, apnum, ltype, lang}, Me.GetRelatedByItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedByItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedByItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedByItemCompleted(Me, New GetRelatedByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedByItemNumber", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedByItemNumber(ByVal icat As String, ByVal ltype As String, ByVal index As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRelatedByItemNumber", New Object() {icat, ltype, index})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByItemNumberAsync(ByVal icat As String, ByVal ltype As String, ByVal index As String)
            Me.GetRelatedByItemNumberAsync(icat, ltype, index, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRelatedByItemNumberAsync(ByVal icat As String, ByVal ltype As String, ByVal index As String, ByVal userState As Object)
            If (Me.GetRelatedByItemNumberOperationCompleted Is Nothing) Then
                Me.GetRelatedByItemNumberOperationCompleted = AddressOf Me.OnGetRelatedByItemNumberOperationCompleted
            End If
            Me.InvokeAsync("GetRelatedByItemNumber", New Object() {icat, ltype, index}, Me.GetRelatedByItemNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRelatedByItemNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRelatedByItemNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRelatedByItemNumberCompleted(Me, New GetRelatedByItemNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CHeckRelatedItemExistsBet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CHeckRelatedItemExistsBet(ByVal ic As String, ByVal ltype As String, ByVal ic2 As String, ByVal ltype2 As String, ByVal item As String) As Boolean
            Dim results() As Object = Me.Invoke("CHeckRelatedItemExistsBet", New Object() {ic, ltype, ic2, ltype2, item})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CHeckRelatedItemExistsBetAsync(ByVal ic As String, ByVal ltype As String, ByVal ic2 As String, ByVal ltype2 As String, ByVal item As String)
            Me.CHeckRelatedItemExistsBetAsync(ic, ltype, ic2, ltype2, item, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CHeckRelatedItemExistsBetAsync(ByVal ic As String, ByVal ltype As String, ByVal ic2 As String, ByVal ltype2 As String, ByVal item As String, ByVal userState As Object)
            If (Me.CHeckRelatedItemExistsBetOperationCompleted Is Nothing) Then
                Me.CHeckRelatedItemExistsBetOperationCompleted = AddressOf Me.OnCHeckRelatedItemExistsBetOperationCompleted
            End If
            Me.InvokeAsync("CHeckRelatedItemExistsBet", New Object() {ic, ltype, ic2, ltype2, item}, Me.CHeckRelatedItemExistsBetOperationCompleted, userState)
        End Sub
        
        Private Sub OnCHeckRelatedItemExistsBetOperationCompleted(ByVal arg As Object)
            If (Not (Me.CHeckRelatedItemExistsBetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CHeckRelatedItemExistsBetCompleted(Me, New CHeckRelatedItemExistsBetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CHeckRelated", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CHeckRelated(ByVal tc As String, ByVal ic As String, ByVal ltype As String) As Boolean
            Dim results() As Object = Me.Invoke("CHeckRelated", New Object() {tc, ic, ltype})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CHeckRelatedAsync(ByVal tc As String, ByVal ic As String, ByVal ltype As String)
            Me.CHeckRelatedAsync(tc, ic, ltype, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CHeckRelatedAsync(ByVal tc As String, ByVal ic As String, ByVal ltype As String, ByVal userState As Object)
            If (Me.CHeckRelatedOperationCompleted Is Nothing) Then
                Me.CHeckRelatedOperationCompleted = AddressOf Me.OnCHeckRelatedOperationCompleted
            End If
            Me.InvokeAsync("CHeckRelated", New Object() {tc, ic, ltype}, Me.CHeckRelatedOperationCompleted, userState)
        End Sub
        
        Private Sub OnCHeckRelatedOperationCompleted(ByVal arg As Object)
            If (Not (Me.CHeckRelatedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CHeckRelatedCompleted(Me, New CHeckRelatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMoreInfoData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMoreInfoData(ByVal fnum As Integer, ByVal vers As String, ByVal lang As String, ByVal gicat As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMoreInfoData", New Object() {fnum, vers, lang, gicat})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMoreInfoDataAsync(ByVal fnum As Integer, ByVal vers As String, ByVal lang As String, ByVal gicat As String)
            Me.GetMoreInfoDataAsync(fnum, vers, lang, gicat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMoreInfoDataAsync(ByVal fnum As Integer, ByVal vers As String, ByVal lang As String, ByVal gicat As String, ByVal userState As Object)
            If (Me.GetMoreInfoDataOperationCompleted Is Nothing) Then
                Me.GetMoreInfoDataOperationCompleted = AddressOf Me.OnGetMoreInfoDataOperationCompleted
            End If
            Me.InvokeAsync("GetMoreInfoData", New Object() {fnum, vers, lang, gicat}, Me.GetMoreInfoDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMoreInfoDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMoreInfoDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMoreInfoDataCompleted(Me, New GetMoreInfoDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKitsIncluded", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKitsIncluded(ByVal vers As String, ByVal itemNumner As Integer, ByVal lang As String, ByVal mainApp As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetKitsIncluded", New Object() {vers, itemNumner, lang, mainApp})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKitsIncludedAsync(ByVal vers As String, ByVal itemNumner As Integer, ByVal lang As String, ByVal mainApp As String)
            Me.GetKitsIncludedAsync(vers, itemNumner, lang, mainApp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKitsIncludedAsync(ByVal vers As String, ByVal itemNumner As Integer, ByVal lang As String, ByVal mainApp As String, ByVal userState As Object)
            If (Me.GetKitsIncludedOperationCompleted Is Nothing) Then
                Me.GetKitsIncludedOperationCompleted = AddressOf Me.OnGetKitsIncludedOperationCompleted
            End If
            Me.InvokeAsync("GetKitsIncluded", New Object() {vers, itemNumner, lang, mainApp}, Me.GetKitsIncludedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKitsIncludedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKitsIncludedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKitsIncludedCompleted(Me, New GetKitsIncludedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchParamApplications", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchParamApplications() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSearchParamApplications", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamApplicationsAsync()
            Me.GetSearchParamApplicationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamApplicationsAsync(ByVal userState As Object)
            If (Me.GetSearchParamApplicationsOperationCompleted Is Nothing) Then
                Me.GetSearchParamApplicationsOperationCompleted = AddressOf Me.OnGetSearchParamApplicationsOperationCompleted
            End If
            Me.InvokeAsync("GetSearchParamApplications", New Object(-1) {}, Me.GetSearchParamApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchParamApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchParamApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchParamApplicationsCompleted(Me, New GetSearchParamApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchParamParameters", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchParamParameters(ByVal mapp As String, ByVal type As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSearchParamParameters", New Object() {mapp, type})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamParametersAsync(ByVal mapp As String, ByVal type As String)
            Me.GetSearchParamParametersAsync(mapp, type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamParametersAsync(ByVal mapp As String, ByVal type As String, ByVal userState As Object)
            If (Me.GetSearchParamParametersOperationCompleted Is Nothing) Then
                Me.GetSearchParamParametersOperationCompleted = AddressOf Me.OnGetSearchParamParametersOperationCompleted
            End If
            Me.InvokeAsync("GetSearchParamParameters", New Object() {mapp, type}, Me.GetSearchParamParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchParamParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchParamParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchParamParametersCompleted(Me, New GetSearchParamParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchParamParameterValues", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchParamParameterValues(ByVal mapp As String, ByVal param As Integer, ByVal type As String, ByVal unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSearchParamParameterValues", New Object() {mapp, param, type, unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamParameterValuesAsync(ByVal mapp As String, ByVal param As Integer, ByVal type As String, ByVal unit As String)
            Me.GetSearchParamParameterValuesAsync(mapp, param, type, unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamParameterValuesAsync(ByVal mapp As String, ByVal param As Integer, ByVal type As String, ByVal unit As String, ByVal userState As Object)
            If (Me.GetSearchParamParameterValuesOperationCompleted Is Nothing) Then
                Me.GetSearchParamParameterValuesOperationCompleted = AddressOf Me.OnGetSearchParamParameterValuesOperationCompleted
            End If
            Me.InvokeAsync("GetSearchParamParameterValues", New Object() {mapp, param, type, unit}, Me.GetSearchParamParameterValuesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchParamParameterValuesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchParamParameterValuesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchParamParameterValuesCompleted(Me, New GetSearchParamParameterValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchFamilies", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchFamilies(ByVal mapp As String, ByVal type As String, ByVal unit As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSearchFamilies", New Object() {mapp, type, unit})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchFamiliesAsync(ByVal mapp As String, ByVal type As String, ByVal unit As String)
            Me.GetSearchFamiliesAsync(mapp, type, unit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchFamiliesAsync(ByVal mapp As String, ByVal type As String, ByVal unit As String, ByVal userState As Object)
            If (Me.GetSearchFamiliesOperationCompleted Is Nothing) Then
                Me.GetSearchFamiliesOperationCompleted = AddressOf Me.OnGetSearchFamiliesOperationCompleted
            End If
            Me.InvokeAsync("GetSearchFamilies", New Object() {mapp, type, unit}, Me.GetSearchFamiliesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchFamiliesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchFamiliesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchFamiliesCompleted(Me, New GetSearchFamiliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchParamResults", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchParamResults(ByVal mapp As String, ByVal strWhere As String, ByVal type As String, ByVal unit As String, ByVal condCounter As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSearchParamResults", New Object() {mapp, strWhere, type, unit, condCounter})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamResultsAsync(ByVal mapp As String, ByVal strWhere As String, ByVal type As String, ByVal unit As String, ByVal condCounter As String)
            Me.GetSearchParamResultsAsync(mapp, strWhere, type, unit, condCounter, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchParamResultsAsync(ByVal mapp As String, ByVal strWhere As String, ByVal type As String, ByVal unit As String, ByVal condCounter As String, ByVal userState As Object)
            If (Me.GetSearchParamResultsOperationCompleted Is Nothing) Then
                Me.GetSearchParamResultsOperationCompleted = AddressOf Me.OnGetSearchParamResultsOperationCompleted
            End If
            Me.InvokeAsync("GetSearchParamResults", New Object() {mapp, strWhere, type, unit, condCounter}, Me.GetSearchParamResultsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchParamResultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchParamResultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchParamResultsCompleted(Me, New GetSearchParamResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMainToolType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMainToolType(ByVal mapp As String, ByVal lang As String, ByVal units As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMainToolType", New Object() {mapp, lang, units})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMainToolTypeAsync(ByVal mapp As String, ByVal lang As String, ByVal units As String)
            Me.GetMainToolTypeAsync(mapp, lang, units, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMainToolTypeAsync(ByVal mapp As String, ByVal lang As String, ByVal units As String, ByVal userState As Object)
            If (Me.GetMainToolTypeOperationCompleted Is Nothing) Then
                Me.GetMainToolTypeOperationCompleted = AddressOf Me.OnGetMainToolTypeOperationCompleted
            End If
            Me.InvokeAsync("GetMainToolType", New Object() {mapp, lang, units}, Me.GetMainToolTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMainToolTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMainToolTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMainToolTypeCompleted(Me, New GetMainToolTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubToolType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubToolType(ByVal code1 As Integer, ByVal lang As String, ByVal units As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSubToolType", New Object() {code1, lang, units})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubToolTypeAsync(ByVal code1 As Integer, ByVal lang As String, ByVal units As String)
            Me.GetSubToolTypeAsync(code1, lang, units, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubToolTypeAsync(ByVal code1 As Integer, ByVal lang As String, ByVal units As String, ByVal userState As Object)
            If (Me.GetSubToolTypeOperationCompleted Is Nothing) Then
                Me.GetSubToolTypeOperationCompleted = AddressOf Me.OnGetSubToolTypeOperationCompleted
            End If
            Me.InvokeAsync("GetSubToolType", New Object() {code1, lang, units}, Me.GetSubToolTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubToolTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubToolTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubToolTypeCompleted(Me, New GetSubToolTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamiliesBySecondaryToolType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamiliesBySecondaryToolType(ByVal mapp As String, ByVal code2 As Integer, ByVal units As String, ByVal language As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamiliesBySecondaryToolType", New Object() {mapp, code2, units, language})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesBySecondaryToolTypeAsync(ByVal mapp As String, ByVal code2 As Integer, ByVal units As String, ByVal language As String)
            Me.GetFamiliesBySecondaryToolTypeAsync(mapp, code2, units, language, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesBySecondaryToolTypeAsync(ByVal mapp As String, ByVal code2 As Integer, ByVal units As String, ByVal language As String, ByVal userState As Object)
            If (Me.GetFamiliesBySecondaryToolTypeOperationCompleted Is Nothing) Then
                Me.GetFamiliesBySecondaryToolTypeOperationCompleted = AddressOf Me.OnGetFamiliesBySecondaryToolTypeOperationCompleted
            End If
            Me.InvokeAsync("GetFamiliesBySecondaryToolType", New Object() {mapp, code2, units, language}, Me.GetFamiliesBySecondaryToolTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamiliesBySecondaryToolTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamiliesBySecondaryToolTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamiliesBySecondaryToolTypeCompleted(Me, New GetFamiliesBySecondaryToolTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/P21_NOItemClass", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function P21_NOItemClass(ByVal itemNumber As String) As Boolean
            Dim results() As Object = Me.Invoke("P21_NOItemClass", New Object() {itemNumber})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub P21_NOItemClassAsync(ByVal itemNumber As String)
            Me.P21_NOItemClassAsync(itemNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub P21_NOItemClassAsync(ByVal itemNumber As String, ByVal userState As Object)
            If (Me.P21_NOItemClassOperationCompleted Is Nothing) Then
                Me.P21_NOItemClassOperationCompleted = AddressOf Me.OnP21_NOItemClassOperationCompleted
            End If
            Me.InvokeAsync("P21_NOItemClass", New Object() {itemNumber}, Me.P21_NOItemClassOperationCompleted, userState)
        End Sub
        
        Private Sub OnP21_NOItemClassOperationCompleted(ByVal arg As Object)
            If (Not (Me.P21_NOItemClassCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent P21_NOItemClassCompleted(Me, New P21_NOItemClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParameterValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParameterValue(ByVal gicat As String, ByVal param As String, ByVal units As String) As String
            Dim results() As Object = Me.Invoke("GetItemParameterValue", New Object() {gicat, param, units})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParameterValueAsync(ByVal gicat As String, ByVal param As String, ByVal units As String)
            Me.GetItemParameterValueAsync(gicat, param, units, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParameterValueAsync(ByVal gicat As String, ByVal param As String, ByVal units As String, ByVal userState As Object)
            If (Me.GetItemParameterValueOperationCompleted Is Nothing) Then
                Me.GetItemParameterValueOperationCompleted = AddressOf Me.OnGetItemParameterValueOperationCompleted
            End If
            Me.InvokeAsync("GetItemParameterValue", New Object() {gicat, param, units}, Me.GetItemParameterValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParameterValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParameterValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParameterValueCompleted(Me, New GetItemParameterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemParameterValueSpecial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParameterValueSpecial(ByVal gicat As String, ByVal param As String, ByVal units As String) As String
            Dim results() As Object = Me.Invoke("GetItemParameterValueSpecial", New Object() {gicat, param, units})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParameterValueSpecialAsync(ByVal gicat As String, ByVal param As String, ByVal units As String)
            Me.GetItemParameterValueSpecialAsync(gicat, param, units, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParameterValueSpecialAsync(ByVal gicat As String, ByVal param As String, ByVal units As String, ByVal userState As Object)
            If (Me.GetItemParameterValueSpecialOperationCompleted Is Nothing) Then
                Me.GetItemParameterValueSpecialOperationCompleted = AddressOf Me.OnGetItemParameterValueSpecialOperationCompleted
            End If
            Me.InvokeAsync("GetItemParameterValueSpecial", New Object() {gicat, param, units}, Me.GetItemParameterValueSpecialOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParameterValueSpecialOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParameterValueSpecialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParameterValueSpecialCompleted(Me, New GetItemParameterValueSpecialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFamiliesParameterValues", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFamiliesParameterValues(ByVal units As String, ByVal lang As String, ByVal app As String, ByVal paramNum As Integer, ByVal typ As String, ByVal sWHERE As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFamiliesParameterValues", New Object() {units, lang, app, paramNum, typ, sWHERE})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesParameterValuesAsync(ByVal units As String, ByVal lang As String, ByVal app As String, ByVal paramNum As Integer, ByVal typ As String, ByVal sWHERE As String)
            Me.GetFamiliesParameterValuesAsync(units, lang, app, paramNum, typ, sWHERE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFamiliesParameterValuesAsync(ByVal units As String, ByVal lang As String, ByVal app As String, ByVal paramNum As Integer, ByVal typ As String, ByVal sWHERE As String, ByVal userState As Object)
            If (Me.GetFamiliesParameterValuesOperationCompleted Is Nothing) Then
                Me.GetFamiliesParameterValuesOperationCompleted = AddressOf Me.OnGetFamiliesParameterValuesOperationCompleted
            End If
            Me.InvokeAsync("GetFamiliesParameterValues", New Object() {units, lang, app, paramNum, typ, sWHERE}, Me.GetFamiliesParameterValuesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFamiliesParameterValuesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFamiliesParameterValuesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFamiliesParameterValuesCompleted(Me, New GetFamiliesParameterValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ParamList
        
        Private paramsField() As SqlParameter
        
        '''<remarks/>
        Public Property Params() As SqlParameter()
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SqlParameter
        Inherits DbParameter
        
        Private compareInfoField As SqlCompareOptions
        
        Private xmlSchemaCollectionDatabaseField As String
        
        Private xmlSchemaCollectionOwningSchemaField As String
        
        Private xmlSchemaCollectionNameField As String
        
        Private forceColumnEncryptionField As Boolean
        
        Private localeIdField As Integer
        
        Private sqlDbTypeField As SqlDbType
        
        Private sqlValueField As Object
        
        Private udtTypeNameField As String
        
        Private typeNameField As String
        
        Private offsetField As Integer
        
        Public Sub New()
            MyBase.New
            Me.forceColumnEncryptionField = false
        End Sub
        
        '''<remarks/>
        Public Property CompareInfo() As SqlCompareOptions
            Get
                Return Me.compareInfoField
            End Get
            Set
                Me.compareInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property XmlSchemaCollectionDatabase() As String
            Get
                Return Me.xmlSchemaCollectionDatabaseField
            End Get
            Set
                Me.xmlSchemaCollectionDatabaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property XmlSchemaCollectionOwningSchema() As String
            Get
                Return Me.xmlSchemaCollectionOwningSchemaField
            End Get
            Set
                Me.xmlSchemaCollectionOwningSchemaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property XmlSchemaCollectionName() As String
            Get
                Return Me.xmlSchemaCollectionNameField
            End Get
            Set
                Me.xmlSchemaCollectionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute(false)>  _
        Public Property ForceColumnEncryption() As Boolean
            Get
                Return Me.forceColumnEncryptionField
            End Get
            Set
                Me.forceColumnEncryptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocaleId() As Integer
            Get
                Return Me.localeIdField
            End Get
            Set
                Me.localeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SqlDbType() As SqlDbType
            Get
                Return Me.sqlDbTypeField
            End Get
            Set
                Me.sqlDbTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SqlValue() As Object
            Get
                Return Me.sqlValueField
            End Get
            Set
                Me.sqlValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UdtTypeName() As String
            Get
                Return Me.udtTypeNameField
            End Get
            Set
                Me.udtTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TypeName() As String
            Get
                Return Me.typeNameField
            End Get
            Set
                Me.typeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As Integer
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SqlCompareOptions
        
        '''<remarks/>
        None = 1
        
        '''<remarks/>
        IgnoreCase = 2
        
        '''<remarks/>
        IgnoreNonSpace = 4
        
        '''<remarks/>
        IgnoreKanaType = 8
        
        '''<remarks/>
        IgnoreWidth = 16
        
        '''<remarks/>
        BinarySort = 32
        
        '''<remarks/>
        BinarySort2 = 64
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SqlDbType
        
        '''<remarks/>
        BigInt
        
        '''<remarks/>
        Binary
        
        '''<remarks/>
        Bit
        
        '''<remarks/>
        [Char]
        
        '''<remarks/>
        DateTime
        
        '''<remarks/>
        [Decimal]
        
        '''<remarks/>
        Float
        
        '''<remarks/>
        Image
        
        '''<remarks/>
        Int
        
        '''<remarks/>
        Money
        
        '''<remarks/>
        NChar
        
        '''<remarks/>
        NText
        
        '''<remarks/>
        NVarChar
        
        '''<remarks/>
        Real
        
        '''<remarks/>
        UniqueIdentifier
        
        '''<remarks/>
        SmallDateTime
        
        '''<remarks/>
        SmallInt
        
        '''<remarks/>
        SmallMoney
        
        '''<remarks/>
        Text
        
        '''<remarks/>
        Timestamp
        
        '''<remarks/>
        TinyInt
        
        '''<remarks/>
        VarBinary
        
        '''<remarks/>
        VarChar
        
        '''<remarks/>
        [Variant]
        
        '''<remarks/>
        Xml
        
        '''<remarks/>
        Udt
        
        '''<remarks/>
        Structured
        
        '''<remarks/>
        [Date]
        
        '''<remarks/>
        Time
        
        '''<remarks/>
        DateTime2
        
        '''<remarks/>
        DateTimeOffset
    End Enum
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(DbParameter)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SqlParameter)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public MustInherit Class MarshalByRefObject
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(SqlParameter)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public MustInherit Class DbParameter
        Inherits MarshalByRefObject
        
        Private dbTypeField As DbType
        
        Private directionField As ParameterDirection
        
        Private isNullableField As Boolean
        
        Private parameterNameField As String
        
        Private precisionField As Byte
        
        Private scaleField As Byte
        
        Private sizeField As Integer
        
        Private sourceColumnField As String
        
        Private sourceColumnNullMappingField As Boolean
        
        Private sourceVersionField As DataRowVersion
        
        Private valueField As Object
        
        Public Sub New()
            MyBase.New
            Me.directionField = ParameterDirection.Input
            Me.parameterNameField = ""
            Me.sourceColumnField = ""
            Me.sourceColumnNullMappingField = false
            Me.sourceVersionField = DataRowVersion.Current
        End Sub
        
        '''<remarks/>
        Public Property DbType() As DbType
            Get
                Return Me.dbTypeField
            End Get
            Set
                Me.dbTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute(ParameterDirection.Input)>  _
        Public Property Direction() As ParameterDirection
            Get
                Return Me.directionField
            End Get
            Set
                Me.directionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsNullable() As Boolean
            Get
                Return Me.isNullableField
            End Get
            Set
                Me.isNullableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute("")>  _
        Public Property ParameterName() As String
            Get
                Return Me.parameterNameField
            End Get
            Set
                Me.parameterNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Precision() As Byte
            Get
                Return Me.precisionField
            End Get
            Set
                Me.precisionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scale() As Byte
            Get
                Return Me.scaleField
            End Get
            Set
                Me.scaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Size() As Integer
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute("")>  _
        Public Property SourceColumn() As String
            Get
                Return Me.sourceColumnField
            End Get
            Set
                Me.sourceColumnField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute(false)>  _
        Public Property SourceColumnNullMapping() As Boolean
            Get
                Return Me.sourceColumnNullMappingField
            End Get
            Set
                Me.sourceColumnNullMappingField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.ComponentModel.DefaultValueAttribute(DataRowVersion.Current)>  _
        Public Property SourceVersion() As DataRowVersion
            Get
                Return Me.sourceVersionField
            End Get
            Set
                Me.sourceVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DbType
        
        '''<remarks/>
        AnsiString
        
        '''<remarks/>
        Binary
        
        '''<remarks/>
        [Byte]
        
        '''<remarks/>
        [Boolean]
        
        '''<remarks/>
        Currency
        
        '''<remarks/>
        [Date]
        
        '''<remarks/>
        DateTime
        
        '''<remarks/>
        [Decimal]
        
        '''<remarks/>
        [Double]
        
        '''<remarks/>
        Guid
        
        '''<remarks/>
        Int16
        
        '''<remarks/>
        Int32
        
        '''<remarks/>
        Int64
        
        '''<remarks/>
        [Object]
        
        '''<remarks/>
        [SByte]
        
        '''<remarks/>
        [Single]
        
        '''<remarks/>
        [String]
        
        '''<remarks/>
        Time
        
        '''<remarks/>
        UInt16
        
        '''<remarks/>
        UInt32
        
        '''<remarks/>
        UInt64
        
        '''<remarks/>
        VarNumeric
        
        '''<remarks/>
        AnsiStringFixedLength
        
        '''<remarks/>
        StringFixedLength
        
        '''<remarks/>
        Xml
        
        '''<remarks/>
        DateTime2
        
        '''<remarks/>
        DateTimeOffset
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum ParameterDirection
        
        '''<remarks/>
        Input
        
        '''<remarks/>
        Output
        
        '''<remarks/>
        InputOutput
        
        '''<remarks/>
        ReturnValue
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DataRowVersion
        
        '''<remarks/>
        Original
        
        '''<remarks/>
        Current
        
        '''<remarks/>
        Proposed
        
        '''<remarks/>
        [Default]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDataTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getLoginBranchDataCompletedEventHandler(ByVal sender As Object, ByVal e As getLoginBranchDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLoginBranchDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTranslationByLanguageAndPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranslationByLanguageAndPageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranslationByLanguageAndPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProCatalogGetItemDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As Iscar4ProCatalogGetItemDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Iscar4ProCatalogGetItemDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneItemsDefCompletedEventHandler(ByVal sender As Object, ByVal e As Iscar4ProMyZoneItemsDefCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Iscar4ProMyZoneItemsDefCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneMyItemsListCompletedEventHandler(ByVal sender As Object, ByVal e As Iscar4ProMyZoneMyItemsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Iscar4ProMyZoneMyItemsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneMyItemDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As Iscar4ProMyZoneMyItemDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Iscar4ProMyZoneMyItemDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneAddNewItemsLisCompletedEventHandler(ByVal sender As Object, ByVal e As Iscar4ProMyZoneAddNewItemsLisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Iscar4ProMyZoneAddNewItemsLisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneDeleteItemsLisCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Iscar4ProMyZoneAddNewItemDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetLanguagesListCompletedEventHandler(ByVal sender As Object, ByVal e As GetLanguagesListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLanguagesListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemGradeCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemGradeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemGradeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemMainAppCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemMainAppCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemMainAppCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CatalogIsExistCompletedEventHandler(ByVal sender As Object, ByVal e As CatalogIsExistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CatalogIsExistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getContactsCompletedEventHandler(ByVal sender As Object, ByVal e As getContactsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getContactsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemUnitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemUnitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemUnitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamilySubToolTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamilySubToolTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamilySubToolTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetWordTranslationCompletedEventHandler(ByVal sender As Object, ByVal e As GetWordTranslationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWordTranslationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetLeftMenuApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLeftMenuApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLeftMenuApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTopMenuLabelsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTopMenuLabelsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTopMenuLabelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountriesEmailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountriesEmailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountriesEmailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub checkIfPromotionExistCompletedEventHandler(ByVal sender As Object, ByVal e As checkIfPromotionExistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkIfPromotionExistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getSearchItemsCompletedEventHandler(ByVal sender As Object, ByVal e As getSearchItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSearchItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getSubApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As getSubApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSubApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamiliesListCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamiliesListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamiliesListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamiliesBySecondaryApplicationWithCondCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamiliesBySecondaryApplicationWithCondCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamiliesBySecondaryApplicationWithCondCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getFamilyDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As getFamilyDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFamilyDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamilyApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamilyApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamilyApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetParameterSearchCompletedEventHandler(ByVal sender As Object, ByVal e As GetParameterSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParameterSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetParameterSearchPicCompletedEventHandler(ByVal sender As Object, ByVal e As GetParameterSearchPicCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParameterSearchPicCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamilyIconsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamilyIconsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamilyIconsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamilyLogosCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamilyLogosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamilyLogosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListISOCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListISOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListISOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListISOAllCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListISOAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListISOAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListISOAllJsonCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListISOAllJsonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListISOAllJsonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListHeaderISOCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListHeaderISOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListHeaderISOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListHeaderISOAllCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListHeaderISOAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListHeaderISOAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListHeaderISOAllJsonCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListHeaderISOAllJsonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListHeaderISOAllJsonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListFromRelatedCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListFromRelatedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListFromRelatedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedItemsByItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedItemsByItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedItemsByItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsListFromRelatedISOAllCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsListFromRelatedISOAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsListFromRelatedISOAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemDetailsIProductCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemDetailsIProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemDetailsIProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemsDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemsDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemsDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParametersCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParametersMobileISOCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParametersMobileISOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParametersMobileISOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParametersMobileISOAllParamsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParametersMobileISOAllParamsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParametersMobileISOAllParamsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParametersISOCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParametersISOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParametersISOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemSparePartsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemSparePartsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemSparePartsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemKitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemKitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemKitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetGradeDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetGradeDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGradeDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetGradeVcMaterialsCompletedEventHandler(ByVal sender As Object, ByVal e As GetGradeVcMaterialsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGradeVcMaterialsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetApplicationMainMethodCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicationMainMethodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicationMainMethodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetGradeVcMaterialsByGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetGradeVcMaterialsByGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGradeVcMaterialsByGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetGradeVcDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetGradeVcDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGradeVcDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemNumberByDscoAndGradeCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemNumberByDscoAndGradeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemNumberByDscoAndGradeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSparePartDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSparePartDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSparePartDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSparePartUsedInToolsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSparePartUsedInToolsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSparePartUsedInToolsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAlternateListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAlternateListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAlternateListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedTypeByFamilyCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedTypeByFamilyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedTypeByFamilyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedTypeByItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedTypeByItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedTypeByItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedByFamilyCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedByFamilyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedByFamilyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedByItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedByItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedByItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRelatedByItemNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetRelatedByItemNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRelatedByItemNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CHeckRelatedItemExistsBetCompletedEventHandler(ByVal sender As Object, ByVal e As CHeckRelatedItemExistsBetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CHeckRelatedItemExistsBetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CHeckRelatedCompletedEventHandler(ByVal sender As Object, ByVal e As CHeckRelatedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CHeckRelatedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMoreInfoDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetMoreInfoDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMoreInfoDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKitsIncludedCompletedEventHandler(ByVal sender As Object, ByVal e As GetKitsIncludedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKitsIncludedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSearchParamApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchParamApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchParamApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSearchParamParametersCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchParamParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchParamParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSearchParamParameterValuesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchParamParameterValuesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchParamParameterValuesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSearchFamiliesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchFamiliesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchFamiliesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSearchParamResultsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchParamResultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchParamResultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMainToolTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetMainToolTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMainToolTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSubToolTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubToolTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubToolTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamiliesBySecondaryToolTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamiliesBySecondaryToolTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamiliesBySecondaryToolTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub P21_NOItemClassCompletedEventHandler(ByVal sender As Object, ByVal e As P21_NOItemClassCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class P21_NOItemClassCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParameterValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParameterValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParameterValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetItemParameterValueSpecialCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParameterValueSpecialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParameterValueSpecialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFamiliesParameterValuesCompletedEventHandler(ByVal sender As Object, ByVal e As GetFamiliesParameterValuesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFamiliesParameterValuesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
